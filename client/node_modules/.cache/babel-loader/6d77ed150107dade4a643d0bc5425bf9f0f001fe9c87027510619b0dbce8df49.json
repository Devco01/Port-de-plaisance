{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:8000/api';\nconst api = axios.create({\n  baseURL: API_URL\n});\n\n// Intercepteur pour ajouter le token aux requêtes\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers['x-auth-token'] = token;\n  }\n  return config;\n});\nexport const login = async (email, password) => {\n  const response = await api.post('/users/login', {\n    email,\n    password\n  });\n  return response.data;\n};\nexport const register = async userData => {\n  const response = await api.post('/users/register', userData);\n  return response.data;\n};\nexport const getCatways = async () => {\n  const response = await api.get('/catways');\n  return response.data;\n};\nexport const createReservation = async reservationData => {\n  const response = await api.post('/reservations', reservationData);\n  return response.data;\n};\nexport const getReservations = async () => {\n  const response = await api.get('/reservations');\n  return response.data;\n};\nexport default api;","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","login","email","password","response","post","data","register","userData","getCatways","get","createReservation","reservationData","getReservations"],"sources":["C:/Users/UTILISATEUR/port-de-plaisance/client/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:8000/api';\r\n\r\nconst api = axios.create({\r\n    baseURL: API_URL\r\n});\r\n\r\n// Intercepteur pour ajouter le token aux requêtes\r\napi.interceptors.request.use((config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n        config.headers['x-auth-token'] = token;\r\n    }\r\n    return config;\r\n});\r\n\r\nexport const login = async (email, password) => {\r\n    const response = await api.post('/users/login', { email, password });\r\n    return response.data;\r\n};\r\n\r\nexport const register = async (userData) => {\r\n    const response = await api.post('/users/register', userData);\r\n    return response.data;\r\n};\r\n\r\nexport const getCatways = async () => {\r\n    const response = await api.get('/catways');\r\n    return response.data;\r\n};\r\n\r\nexport const createReservation = async (reservationData) => {\r\n    const response = await api.post('/reservations', reservationData);\r\n    return response.data;\r\n};\r\n\r\nexport const getReservations = async () => {\r\n    const response = await api.get('/reservations');\r\n    return response.data;\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B;AAE3C,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACrBC,OAAO,EAAEH;AACb,CAAC,CAAC;;AAEF;AACAC,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACrC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACPD,MAAM,CAACI,OAAO,CAAC,cAAc,CAAC,GAAGH,KAAK;EAC1C;EACA,OAAOD,MAAM;AACjB,CAAC,CAAC;AAEF,OAAO,MAAMK,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;EAC5C,MAAMC,QAAQ,GAAG,MAAMd,GAAG,CAACe,IAAI,CAAC,cAAc,EAAE;IAAEH,KAAK;IAAEC;EAAS,CAAC,CAAC;EACpE,OAAOC,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAG,MAAOC,QAAQ,IAAK;EACxC,MAAMJ,QAAQ,GAAG,MAAMd,GAAG,CAACe,IAAI,CAAC,iBAAiB,EAAEG,QAAQ,CAAC;EAC5D,OAAOJ,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,OAAO,MAAMG,UAAU,GAAG,MAAAA,CAAA,KAAY;EAClC,MAAML,QAAQ,GAAG,MAAMd,GAAG,CAACoB,GAAG,CAAC,UAAU,CAAC;EAC1C,OAAON,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,OAAO,MAAMK,iBAAiB,GAAG,MAAOC,eAAe,IAAK;EACxD,MAAMR,QAAQ,GAAG,MAAMd,GAAG,CAACe,IAAI,CAAC,eAAe,EAAEO,eAAe,CAAC;EACjE,OAAOR,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,OAAO,MAAMO,eAAe,GAAG,MAAAA,CAAA,KAAY;EACvC,MAAMT,QAAQ,GAAG,MAAMd,GAAG,CAACoB,GAAG,CAAC,eAAe,CAAC;EAC/C,OAAON,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,eAAehB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}