{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\UTILISATEUR\\\\port-de-plaisance\\\\client\\\\src\\\\components\\\\catwaylist.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Typography, Card, CardContent, Grid } from '@mui/material';\nimport { getCatways } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CatwayList = () => {\n  _s();\n  const [catways, setCatways] = useState([]);\n  useEffect(() => {\n    const fetchCatways = async () => {\n      try {\n        const data = await getCatways();\n        setCatways(data);\n      } catch (error) {\n        console.error('Erreur lors de la récupération des catways:', error);\n      }\n    };\n    fetchCatways();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      sx: {\n        mb: 4\n      },\n      children: \"Liste des Catways\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: catways.map(catway => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: [\"Catway N\\xB0\", catway.catwayNumber]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"textSecondary\",\n              children: [\"Type: \", catway.catwayType]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"textSecondary\",\n              children: [\"\\xC9tat: \", catway.catwayState]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this)\n      }, catway._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(CatwayList, \"osZaAfnD6pFBz/r5lfs/Asy+Nyw=\");\n_c = CatwayList;\nexport default CatwayList;\nvar _c;\n$RefreshReg$(_c, \"CatwayList\");","map":{"version":3,"names":["React","useState","useEffect","Container","Typography","Card","CardContent","Grid","getCatways","jsxDEV","_jsxDEV","CatwayList","_s","catways","setCatways","fetchCatways","data","error","console","children","variant","sx","mb","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","map","catway","item","xs","sm","md","catwayNumber","color","catwayType","catwayState","_id","_c","$RefreshReg$"],"sources":["C:/Users/UTILISATEUR/port-de-plaisance/client/src/components/catwaylist.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Container, Typography, Card, CardContent, Grid } from '@mui/material';\r\nimport { getCatways } from '../services/api';\r\n\r\nconst CatwayList = () => {\r\n    const [catways, setCatways] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchCatways = async () => {\r\n            try {\r\n                const data = await getCatways();\r\n                setCatways(data);\r\n            } catch (error) {\r\n                console.error('Erreur lors de la récupération des catways:', error);\r\n            }\r\n        };\r\n\r\n        fetchCatways();\r\n    }, []);\r\n\r\n    return (\r\n        <Container>\r\n            <Typography variant=\"h4\" sx={{ mb: 4 }}>\r\n                Liste des Catways\r\n            </Typography>\r\n            <Grid container spacing={3}>\r\n                {catways.map((catway) => (\r\n                    <Grid item xs={12} sm={6} md={4} key={catway._id}>\r\n                        <Card>\r\n                            <CardContent>\r\n                                <Typography variant=\"h6\">\r\n                                    Catway N°{catway.catwayNumber}\r\n                                </Typography>\r\n                                <Typography color=\"textSecondary\">\r\n                                    Type: {catway.catwayType}\r\n                                </Typography>\r\n                                <Typography color=\"textSecondary\">\r\n                                    État: {catway.catwayState}\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default CatwayList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,UAAU,EAAEC,IAAI,EAAEC,WAAW,EAAEC,IAAI,QAAQ,eAAe;AAC9E,SAASC,UAAU,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACZ,MAAMa,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACA,MAAMC,IAAI,GAAG,MAAMR,UAAU,CAAC,CAAC;QAC/BM,UAAU,CAACE,IAAI,CAAC;MACpB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,6CAA6C,EAAEA,KAAK,CAAC;MACvE;IACJ,CAAC;IAEDF,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIL,OAAA,CAACP,SAAS;IAAAgB,QAAA,gBACNT,OAAA,CAACN,UAAU;MAACgB,OAAO,EAAC,IAAI;MAACC,EAAE,EAAE;QAAEC,EAAE,EAAE;MAAE,CAAE;MAAAH,QAAA,EAAC;IAExC;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACbhB,OAAA,CAACH,IAAI;MAACoB,SAAS;MAACC,OAAO,EAAE,CAAE;MAAAT,QAAA,EACtBN,OAAO,CAACgB,GAAG,CAAEC,MAAM,iBAChBpB,OAAA,CAACH,IAAI;QAACwB,IAAI;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAACC,EAAE,EAAE,CAAE;QAAAf,QAAA,eAC5BT,OAAA,CAACL,IAAI;UAAAc,QAAA,eACDT,OAAA,CAACJ,WAAW;YAAAa,QAAA,gBACRT,OAAA,CAACN,UAAU;cAACgB,OAAO,EAAC,IAAI;cAAAD,QAAA,GAAC,cACZ,EAACW,MAAM,CAACK,YAAY;YAAA;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrB,CAAC,eACbhB,OAAA,CAACN,UAAU;cAACgC,KAAK,EAAC,eAAe;cAAAjB,QAAA,GAAC,QACxB,EAACW,MAAM,CAACO,UAAU;YAAA;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChB,CAAC,eACbhB,OAAA,CAACN,UAAU;cAACgC,KAAK,EAAC,eAAe;cAAAjB,QAAA,GAAC,WACxB,EAACW,MAAM,CAACQ,WAAW;YAAA;cAAAf,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjB,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACZ;MAAC,GAb2BI,MAAM,CAACS,GAAG;QAAAhB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAc1C,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEpB,CAAC;AAACd,EAAA,CA1CID,UAAU;AAAA6B,EAAA,GAAV7B,UAAU;AA4ChB,eAAeA,UAAU;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}